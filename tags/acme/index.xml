<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ACME on 不折腾不舒服</title><link>https://hitian.info/tags/acme/</link><description>Recent content in ACME on 不折腾不舒服</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 16 Feb 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://hitian.info/tags/acme/index.xml" rel="self" type="application/rss+xml"/><item><title>使用ACME Shell script和dnspod的api自动生成Let's Encrypt证书</title><link>https://hitian.info/post/acme-sh-create-letsencrypt-certificates-with-dns-api/</link><pubDate>Thu, 16 Feb 2017 00:00:00 +0000</pubDate><guid>https://hitian.info/post/acme-sh-create-letsencrypt-certificates-with-dns-api/</guid><description>安装 acme.sh curl https://get.acme.sh | sh 参考 https://github.com/Neilpang/acme.sh
安装完成之后可执行文件位于 ~/.acme.sh/acme.sh
生成 dnspod 的API Token 地址 https://www.dnspod.cn/console/user/security
用户中心 &amp;gt; 安全设置 &amp;gt; API Token &amp;gt; 创建 API Token
注意，Token 只显示一次， 保存下来， 如果忘记了， 就只能删除然后重新生成了。
还需需要记录下 API Token 的 ID
开始签发证书 参考 https://github.com/Neilpang/acme.sh/tree/master/dnsapi
首先设置环境变量
export DP_Id=&amp;#34;API Token 的 ID&amp;#34; export DP_Key=&amp;#34;API Token&amp;#34; 然后可以开始签发了
acme.sh --issue --dns dns_dp -d example.com -d www.example.com 每个 -d 参数可以指定一个域名， 可以把需要用到的子域名也全部列出来
自动运行的流程大概是这样的
使用dnspod的api 自动生成所有的验证域名txt记录 _acme-challenge.example.com， 每个子域名也会有_acme-challenge.www.example.com 等待dns记录生效，自动脚本会sleep 120 秒 检查验证的dns记录， 没有问题的话签发证书保存到本地， 再次调用api 移除验证的域名 创建crontab 自动更新相关证书。 生成好的证书位于 ~/.</description></item></channel></rss>